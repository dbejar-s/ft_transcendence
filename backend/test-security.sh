#!/bin/bash

echo "üîê Security Test Suite for ft_transcendence"
echo "==========================================="
echo ""

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Check if we're in the backend directory
if [ ! -f "package.json" ]; then
    echo -e "${RED}‚ùå Please run this script from the backend directory${NC}"
    exit 1
fi

echo "üì¶ Installing test dependencies..."
if ! npm install --silent; then
    echo -e "${RED}‚ùå Failed to install dependencies${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Dependencies installed${NC}"
echo ""

echo "üß™ Running Security Tests..."
echo "============================"

# Run different security test suites
echo ""
echo -e "${BLUE}üîí Testing Password Security...${NC}"
if npx vitest run test/security/password.test.ts --reporter=verbose 2>/dev/null; then
    echo -e "${GREEN}‚úÖ Password security tests passed${NC}"
else
    echo -e "${RED}‚ùå Password security tests failed${NC}"
fi

echo ""
echo -e "${BLUE}üõ°Ô∏è  Testing SQL Injection Protection...${NC}"
if npx vitest run test/security/sql-injection.test.ts --reporter=verbose 2>/dev/null; then
    echo -e "${GREEN}‚úÖ SQL injection protection tests passed${NC}"
else
    echo -e "${RED}‚ùå SQL injection protection tests failed${NC}"
fi

echo ""
echo -e "${BLUE}üîë Testing JWT Security...${NC}"
if npx vitest run test/security/jwt.test.ts --reporter=verbose 2>/dev/null; then
    echo -e "${GREEN}‚úÖ JWT security tests passed${NC}"
else
    echo -e "${RED}‚ùå JWT security tests failed${NC}"
fi

echo ""
echo -e "${BLUE}‚ú® Testing Input Validation...${NC}"
if npx vitest run test/security/validation.test.ts --reporter=verbose 2>/dev/null; then
    echo -e "${GREEN}‚úÖ Input validation tests passed${NC}"
else
    echo -e "${RED}‚ùå Input validation tests failed${NC}"
fi

echo ""
echo -e "${BLUE}üåê Testing HTTPS & CORS Security...${NC}"
if npx vitest run test/security/https-cors.test.ts --reporter=verbose 2>/dev/null; then
    echo -e "${GREEN}‚úÖ HTTPS & CORS security tests passed${NC}"
else
    echo -e "${RED}‚ùå HTTPS & CORS security tests failed${NC}"
fi

echo ""
echo -e "${BLUE}üîê Testing Environment Security...${NC}"
if npx vitest run test/security/environment.test.ts --reporter=verbose 2>/dev/null; then
    echo -e "${GREEN}‚úÖ Environment security tests passed${NC}"
else
    echo -e "${RED}‚ùå Environment security tests failed${NC}"
fi

echo ""
echo "üìä Running All Security Tests with Coverage..."
echo "==============================================="

if npx vitest run test/security/ --coverage --reporter=verbose; then
    echo ""
    echo -e "${GREEN}üéâ All security tests completed!${NC}"
    echo ""
    echo "üìã Security Test Summary:"
    echo "========================"
    echo "‚úÖ Password hashing with bcrypt"
    echo "‚úÖ SQL injection protection"
    echo "‚úÖ JWT token security"
    echo "‚úÖ Input validation & XSS prevention"
    echo "‚úÖ HTTPS & SSL configuration"
    echo "‚úÖ CORS security"
    echo "‚úÖ Environment variable protection"
    echo "‚úÖ 2FA security"
    echo "‚úÖ Session management"
    echo ""
    echo -e "${BLUE}üìÑ Coverage report generated in coverage/ directory${NC}"
else
    echo ""
    echo -e "${RED}‚ùå Some security tests failed. Please review the output above.${NC}"
    exit 1
fi

echo ""
echo "üîç Additional Security Checks:"
echo "=============================="

# Check for .env in .gitignore
if grep -q "\.env" ../.gitignore 2>/dev/null; then
    echo -e "${GREEN}‚úÖ .env files are properly gitignored${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Warning: .env files might not be gitignored${NC}"
fi

# Check for hardcoded secrets
echo "üîç Scanning for hardcoded secrets..."
if grep -r -i "password\|secret\|key" src/ --include="*.ts" --exclude-dir=test | grep -v "process.env" | head -5; then
    echo -e "${YELLOW}‚ö†Ô∏è  Found potential hardcoded secrets (review above)${NC}"
else
    echo -e "${GREEN}‚úÖ No obvious hardcoded secrets found${NC}"
fi

# Check SSL certificate configuration
if [ -d "certs" ]; then
    echo -e "${GREEN}‚úÖ SSL certificates directory exists${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  SSL certificates directory not found${NC}"
fi

echo ""
echo -e "${GREEN}üîê Security testing complete!${NC}"
echo ""
echo "üí° Next steps:"
echo "‚Ä¢ Review any warnings above"
echo "‚Ä¢ Ensure all environment variables are properly set"
echo "‚Ä¢ Regularly run these tests before deployment"
echo "‚Ä¢ Keep dependencies updated for security patches"
